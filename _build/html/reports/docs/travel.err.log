Traceback (most recent call last):
  File "C:\Users\fwilden\AppData\Local\miniconda3\envs\jupyterbook\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "C:\Users\fwilden\AppData\Local\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 1314, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "C:\Users\fwilden\AppData\Local\miniconda3\envs\jupyterbook\lib\site-packages\jupyter_core\utils\__init__.py", line 165, in wrapped
    return loop.run_until_complete(inner)
  File "C:\Users\fwilden\AppData\Local\miniconda3\envs\jupyterbook\lib\asyncio\base_events.py", line 649, in run_until_complete
    return future.result()
  File "C:\Users\fwilden\AppData\Local\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 709, in async_execute
    await self.async_execute_cell(
  File "C:\Users\fwilden\AppData\Local\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 1062, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "C:\Users\fwilden\AppData\Local\miniconda3\envs\jupyterbook\lib\site-packages\nbclient\client.py", line 918, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
import pandas as pd
import plotly.express as px
import plotly.graph_objects as go
import numpy as np
from travel_plotter import journey_generator

# Prepare dataset
def excel_fixer(input):
    if type(input) == float:
        return input
    else:
        return float(input.replace(',', '.'))
df = pd.read_csv("whc-sites-2023.csv", sep=';')
df['latitude'] = df['latitude'].apply(lambda x: excel_fixer(x))
df['longitude'] = df['longitude'].apply(lambda x: excel_fixer(x))
df['Year'] = df['Year'].apply(lambda x: x if not np.isnan(x) else "Not yet visited")
df['Rating'] = df['Rating'].apply(lambda x: excel_fixer(x))
df['Rating'] = df['Rating'].apply(lambda x: x if not np.isnan(x) else "Not yet visited")
df = df[df['Visited'].notna()]

fig = go.Figure()
for lats, lons, color, year in journey_generator(df):
    fig2 = px.line_mapbox(lat=lats, lon=lons, color_discrete_sequence=[color])
    fig2.update_layout(mapbox_style='carto-positron', hovermode=False)
    fig = go.Figure(data=fig.data + fig2.data)

max_bound = max(abs(min(df['latitude'].astype(float))-max(df['latitude'])), abs(min(df['longitude'])-max(df['longitude']))) * 175
zoom = 11.5 - np.log(max_bound)
fig1 = px.scatter_mapbox(df, lat='latitude', lon='longitude', color='Visited',
                        hover_name='name_en', mapbox_style='carto-positron', zoom=zoom,
                        custom_data=['Rating', 'Year'], hover_data={
                            'latitude':False,
                            'longitude':False,
                        })

fig1.update_traces(hovertemplate='<b>%{hovertext}</b><br>Rating: %{customdata[0]} <br>Visited in: %{customdata[1]}<extra></extra>')
fig1.update_layout(showlegend=False, margin={'t':0,'l':0,'b':0,'r':0})

fig = go.Figure(data=fig.data + fig1.data, layout=fig1.layout)


fig.show()

------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mModuleNotFoundError[0m                       Traceback (most recent call last)
Cell [1;32mIn[2], line 1[0m
[1;32m----> 1[0m [38;5;28;01mimport[39;00m [38;5;21;01mpandas[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpd[39;00m
[0;32m      2[0m [38;5;28;01mimport[39;00m [38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mexpress[39;00m [38;5;28;01mas[39;00m [38;5;21;01mpx[39;00m
[0;32m      3[0m [38;5;28;01mimport[39;00m [38;5;21;01mplotly[39;00m[38;5;21;01m.[39;00m[38;5;21;01mgraph_objects[39;00m [38;5;28;01mas[39;00m [38;5;21;01mgo[39;00m

[1;31mModuleNotFoundError[0m: No module named 'pandas'

